#!/usr/bin/env python3
"""
Create Roots of Healing Workflow V8 with existing knowledge base.

This script creates the workflow v8 agent and attaches the existing
"Roots of Healing Knowledge Base" that contains 5,393 chunks from
therapeutic books.
"""

import asyncio
from pathlib import Path
from integro.config import ConfigStorage, AgentConfig
from integro.utils.logging import get_logger

logger = get_logger(__name__)

async def main():
    # Read the workflow markdown file
    workflow_path = Path("Agents/roots_of_healing_workflow_8.md")

    with open(workflow_path, 'r', encoding='utf-8') as f:
        content = f.read()

    # Parse instructions
    instructions = [line for line in content.split('\n') if line.strip()]

    # Create agent config (ID will be auto-generated by storage layer)
    agent_config = AgentConfig(
        name="Roots of Healing - Day 1 Workflow (Version 8) Workflow 1",
        description=(
            "An integration workflow agent that assists users in the Integro psychedelic integration platform. "
            "This agent guides users through structured therapeutic processes and integration work. "
            "Version 8 includes [WORKFLOW COMPLETE] exit phrase for clean conversation termination."
        ),
        instructions=instructions,
        models=[{
            "provider": "groq",
            "model_id": "moonshotai/kimi-k2-instruct-0905",
            "params": {
                "temperature": 0.7,
                "top_p": 0.9,
                "frequency_penalty": 0.0,
                "presence_penalty": 0.0
            }
        }],
        knowledge_base_id="roots_of_healing_knowledge_base",  # Existing KB with 5,393 chunks
        search_knowledge=True,  # Enable knowledge search during conversations
        created_at=None,
        updated_at=None
    )

    # Save to database
    storage = ConfigStorage()

    print("\n" + "="*70)
    print("Creating Roots of Healing Workflow V8 with Knowledge Base")
    print("="*70)
    print(f"Name: {agent_config.name}")
    print(f"Knowledge Base: roots_of_healing_knowledge_base (5,393 chunks)")
    print(f"Model: {agent_config.models[0]['model_id']}")
    print("="*70 + "\n")

    agent_id = await storage.save_agent(agent_config)

    print("✓ Agent created successfully!")
    print(f"✓ Agent ID: {agent_id}")
    print(f"✓ Knowledge base attached: {agent_config.knowledge_base_id}")
    print(f"✓ Knowledge search enabled: {agent_config.search_knowledge}")
    print("\nYou can now use this agent in simulations.")
    print(f"View at: http://localhost:8889/agents/{agent_id}")
    print()

if __name__ == "__main__":
    asyncio.run(main())
